version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3
  aws-ecr: circleci/aws-ecr@2.0
  aws-ecs: circleci/aws-ecs@2.0
jobs:
  run_tests:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: |
            npm install --save
      - run:
          name: Run Unit Tests
          command: |
            npm run test 
      - store_test_results:
          path: mochawesome-report
  # build_docker_image:
  #   docker:
  #     - image: circleci/node:12
  #   steps:
  #     - checkout
  #     - aws-cli/install
  #     - setup_remote_docker:
  #         docker_layer_caching: false
  #     - run:
  #         name: Build Docker image
  #         command: |
  #           export TAG=0.2.<< pipeline.number >>
  #           export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME
  #           docker build -t $DOCKER_LOGIN/$IMAGE_NAME -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
  #           echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
  #           docker push $DOCKER_LOGIN/$IMAGE_NAME
  # build_docker_image:
  #   docker:
  #     - image: circleci/node:12
  #   steps:
  #     - checkout
  #     - aws-cli/install
  #     - aws-cli/setup:
  #         aws-access-key-id: AWS_ACCESS_KEY_ID 
  #         aws-secret-access-key: AWS_SECRET_ACCESS_KEY
  #     - setup_remote_docker:
  #         docker_layer_caching: false
  #     - run:
  #         name: Build Docker image
  #         command: |
  #           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 902513218701.dkr.ecr.us-east-1.amazonaws.com
  #           export TAG=0.2.<< pipeline.number >>
  #           export IMAGE_NAME=circleci-demo
  #           docker build -t circleci-demo .
  #           docker tag circleci-demo:latest 902513218701.dkr.ecr.us-east-1.amazonaws.com/circleci-demo:latest
  #           docker push 902513218701.dkr.ecr.us-east-1.amazonaws.com/circleci-demo:latest
  build_docker_image:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID 
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY      
      - aws-ecs/run-task:
          awsvpc: false
          cluster: DemoAppCluster
          launch-type: EC2
          task-definition: CircleCi             
workflows:
  build_test:
    jobs:
      - run_tests
      - build_docker_image:
          requires:
            - run_tests
      # - gke_create_cluster
      # - gke_deploy_app:
      #     requires:
      #       - run_tests
      #       - build_docker_image
      #       - gke_create_cluster
      # - smoketest_gke_deployment:
      #     requires:
      #       - gke_deploy_app
      # - approve-destroy:
      #     type: approval
      #     requires:
      #       - gke_create_cluster
      #       - gke_deploy_app
      #       - smoketest_gke_deployment
      # - gke_destroy_cluster:
      #     requires:
       